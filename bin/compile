#!/usr/bin/env bash

# Copyright 2015 Aaron M Santavicca <amsantav@us.ibm.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Let's not break everything accidentally
set -eu
set -o pipefail

# This script is run as 'bin/compile <BUILD_DIR> <CACHE_DIR>'
# Make sure the BUILD_DIR exists, don't worry about the CACHE_DIR for now
mkdir -p "$1"

build=$(cd "$1/" && pwd)
bpdir=$(dirname $(dirname "$0"))

# Double check that we have a Cargo.toml
if [[ ! -f "$build/Cargo.toml" ]]; then
    echo "Cargo.toml is required."
    exit 1
fi

# Get our args for rustup-init in order
toolchain=${RUST_TOOLCHAIN:-"stable"}
verbosity=${RUSTUP_VERBOSE:+"-v"}
custom_args=${RUSTUP_CUSTOM:-""}
rustup_args="${custom_args:-"${verbosity:-""} --default-toolchain $toolchain"}"

# Install Rust toolchain
curl https://sh.rustup.rs -sSf | sh -s -- -y ${rustup_args}

# Make sure .cargo/bin is on the path
path_to_cargo="$HOME/.cargo/bin/"
export PATH=$path_to_cargo:$PATH

# Do the build
cd "$build"
cargo build ${CARGO_BUILD_FLAGS:-"--release"}

# Determine a default start command
#if [[ -z "$START_COMMAND" ]]; then
APP=$(echo $VCAP_APPLICATION | tr ',' '\n' | grep "application_name")
APP=$(echo $APP | cut -d':' -f2 | tr -d '"')
START_COMMAND="sudo ./target/release/$APP"
#fi

# Modify the bin/release script with the start command
sed -i "s@web: EMPTY@web: $START_COMMAND@" $bpdir/bin/release
